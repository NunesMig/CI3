name: Node.js Package

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - run: npm ci
      - run: npm test 
  release: 
    name: Release Project
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create Github release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:
          tag_name: ${{ github.run_number }}
          release_name: ${{ github.run_number }}
  publish-gpr:
    name: Publish to Git Hub Packages
    needs: release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  build-container:
    needs: publish-gpr
    name: Build container
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Build and push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: nunesmig/ci3:latest, nunesmig/ci3:${{ github.run_number }}
  Minikube:
    needs: build-container
    runs-on: ubuntu-latest
    name: build example and deploy to minikube
    steps:
    - uses: actions/checkout@v2
    - name: Start minikube
      uses: medyagh/setup-minikube@master
    - name: Try the cluster !
      run: kubectl get pods -A
    - name: Build image
      run: |
        export SHELL=/bin/bash
        eval $(minikube -p minikube docker-env)
        docker build -f ./Dockerfile -t local/example .
        echo -n "verifying images:"
        docker images        
    - name: Deploy to minikube
      run:
        kubectl apply -f deploy-to-minikube.yml
    - name: Test service URLs
      run: |
       minikube tunnel
       kubectl create deployment hello-minikube1 --image=hub.docker.com/repository/docker/nunesmig/ci3:latest
       kubectl expose deployment hello-minikube1 --type=LoadBalancer --port=8080
       kubectl get svc